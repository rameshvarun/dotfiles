#!/usr/bin/env python3

import os
import sys
import tempfile
import urllib
import urllib.request
import tarfile
import hashlib
import subprocess
import platform

from pathlib import Path
from utils import Download, get_download

DOWNLOADS = [
    Download(
        "Linux",
        "x86_64",
        "https://github.com/jesseduffield/lazygit/releases/download/v0.40.2/lazygit_0.40.2_Linux_x86_64.tar.gz",
        "ff05cb8ebd0785ce220975e5cd394bc200424d9a58727fa81e0bbb3828db7ff1",
    ),
    Download(
        "Darwin",
        "arm64",
        "https://github.com/jesseduffield/lazygit/releases/download/v0.40.2/lazygit_0.40.2_Darwin_arm64.tar.gz",
        "2857416d0d5b21c28a69850b068e072d0064f158a5b6fcfa97a3df8789f5de7f",
    ),
]

def sha256sum(filename):
    return hashlib.sha256(Path(filename).read_bytes()).hexdigest()

def verify(filename, checksum):
    if sha256sum(filename) != checksum:
        raise Exception("File verification failed.")

if __name__ == "__main__":
    script_folder = os.path.realpath(os.path.dirname(__file__))
    downloads_folder = os.path.join(script_folder, "downloads")
    executable_file = os.path.join(downloads_folder, "lazygit")
    download = get_download(DOWNLOADS)

    if not os.path.exists(downloads_folder):
        os.mkdir(downloads_folder)

    if not os.path.exists(executable_file):
        print("Downloading lazygit...")
        with tempfile.TemporaryDirectory() as tmpdir:
            tar_file = os.path.join(tmpdir, "lazygit.tar.gz")

            urllib.request.urlretrieve(download.url, tar_file)
            verify(tar_file, download.sha256sum)

            tar = tarfile.open(tar_file, "r:gz")
            tar.extractall(tmpdir)
            tar.close()

            os.rename(os.path.join(tmpdir, "lazygit"), executable_file)

    subprocess.run([executable_file] + sys.argv[1:])
